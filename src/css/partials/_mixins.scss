@mixin pseudo($content: " ", $top:0, $left:0) {
    content: $content;
    display: block;
    position: absolute;
    top: $top;
    left: $left;
}

@mixin mq($breakpoint) { 
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin flex-row($justify-content: center, $align-items: center) {
  display: flex;
  flex-flow: row nowrap;
  justify-content: $justify-content;
  align-items: $align-items;
}

@mixin flex-col() {
	display: flex;
	flex-flow: column nowrap;
	align-items: center;
}

@mixin incrementAnimDur() {
  @for $i from 1 to 15 {
      .el--#{$i} { 
         animation-duration: (15s + randomNum(15));
      }
  }
}


@mixin randomFontSize() {
  $i: 1;
  @while $i < 15 {
    .el--#{$i} { 
     font-size: floor(14px + 1.1*$i); 
    }
    $i: $i + 3;
  }
} 

